<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /w4g9TsbxmLg+3jE3gAAAABJRU5ErkJggg==
</value>
  </data>
</root>