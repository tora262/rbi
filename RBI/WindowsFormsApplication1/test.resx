<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageTreeList.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="DevExpress.Utils.v17.1" name="DevExpress.Utils.v17.1, Version=17.1.3.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" />
  <data name="imageTreeList.ImageStream" type="DevExpress.Utils.ImageCollectionStreamer, DevExpress.Utils.v17.1" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFpEZXZFeHByZXNzLlV0aWxzLnYxNy4xLCBWZXJzaW9uPTE3LjEu
        My4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI4OGQxNzU0ZDcwMGU0OWEMAwAAAFFT
        eXN0ZW0uRHJhd2luZywgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRv
        a2VuPWIwM2Y1ZjdmMTFkNTBhM2EFAQAAAChEZXZFeHByZXNzLlV0aWxzLkltYWdlQ29sbGVjdGlvblN0
        cmVhbWVyAgAAAAlJbWFnZVNpemUERGF0YQQHE1N5c3RlbS5EcmF3aW5nLlNpemUDAAAAAgIAAAAF/P//
        /xNTeXN0ZW0uRHJhd2luZy5TaXplAgAAAAV3aWR0aAZoZWlnaHQAAAgIAwAAABAAAAAQAAAACQUAAAAP
        BQAAANsLAAAC4AEAAIlQTkcNChoKAAAADUlIRFIAAAAQAAAAEAgGAAAAH/P/YQAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAGCSURBVDhPzZFNSwJRGIVnW0iLqJ8RuQuiXR9YEO7b9QPa
        twzRbBVEaWBSphZUmz7IRYu0QBCCCrUsBc0mKxo/pizFxHmbOXPDTI2gTQ+8nHPu3Hu43OHoj/yzgsdC
        jjlGys6MjLDDTC0oKJRLCOL7G1RB8mpUsydv8TS/KL4E0tcIX6kcthDxVpIqRWRJ2Id+BwWG0AZCDXdW
        VeUCqcirvgEo6D2YRPiEs2gxvwEFnGMQAUhMv2FuN0KPpn1UelXfbKbDxAos3VhQGPPPMkd0kolBjRoD
        revddGz2IissdM2RsXWqvoBbGWCOaOLUjsMKa6MuqIJVOw+tFrj1WFDgVnXMEXVuj0NLefXKilbKFfnP
        SPAoyJbyxDmHcRDjHKl6xxDFCg84nPDF6f4sRS6dgxz9y/QUEdSCkJjEhmZs8X7ojwWXIk/n2UTdhHJJ
        FDzzIiW8cQpvBsneZyNbzyJd7UbUgqC8KfqSorB4iwllbigoJDAX6SQtBTyUjgoNx9RmoA+HNZd1Ui0+
        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
</value>
  </data>
</root>